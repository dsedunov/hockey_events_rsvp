{"ast":null,"code":"import { AngularFireAuth } from '@angular/fire/auth';\nimport { Router, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\nimport 'rxjs/add/operator/map';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(router, fireauth) {\n      this.router = router;\n      this.fireauth = fireauth;\n      this.user = null;\n      this.fireauth.auth.onAuthStateChanged(user => {\n        if (user) {\n          this.user = this.fireauth.auth.currentUser;\n        }\n      });\n    }\n    ongOnInit() {}\n    canActivate(route, state) {\n      return this.fireauth.authState.map(auth => {\n        if (auth == null) {\n          this.router.navigate(['/']);\n          return false;\n        } else {\n          return true;\n        }\n      });\n    }\n    static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n      i0.ɵɵinvalidFactory();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac\n    });\n  }\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}