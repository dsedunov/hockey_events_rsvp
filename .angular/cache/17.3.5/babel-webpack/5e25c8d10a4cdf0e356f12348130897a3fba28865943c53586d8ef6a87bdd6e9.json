{"ast":null,"code":"var _a, _b;\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { FormBuilder } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nlet ProfileComponent = class ProfileComponent {\n  constructor(afs, router, profileUpdateFormBuilder, firebaseAuth, snackBar) {\n    this.afs = afs;\n    this.router = router;\n    this.profileUpdateFormBuilder = profileUpdateFormBuilder;\n    this.firebaseAuth = firebaseAuth;\n    this.snackBar = snackBar;\n    this.stickSelected = '';\n    this.roleSelected = '';\n    this.sticks = [{\n      value: 'Левый',\n      viewValue: 'Левый'\n    }, {\n      value: 'Правый',\n      viewValue: 'Правый'\n    }];\n    this.roles = [{\n      value: 'Вратарь',\n      viewValue: 'Вратарь'\n    }, {\n      value: 'Защитник',\n      viewValue: 'Защитник'\n    }, {\n      value: 'Нападающий',\n      viewValue: 'Нападающий'\n    }];\n    this.email = null;\n    this.nickName = null;\n    this.profileUpdateForm = this.profileUpdateFormBuilder.group({\n      uid: [''],\n      email: [''],\n      nickName: [''],\n      name: [''],\n      surname: [''],\n      stick: [''],\n      role: [''],\n      admin: ['']\n    });\n  }\n  ngOnInit() {\n    const usersRef = this.afs.collection('users').doc(this.firebaseAuth.auth.currentUser.email.toLowerCase()).ref;\n    usersRef.get().then(doc => {\n      console.log(doc);\n      if (doc.exists) {\n        const {\n          email,\n          nickName,\n          name,\n          surname,\n          stick,\n          role,\n          uid,\n          admin\n        } = doc.data();\n        this.email = email;\n        this.nickName = nickName;\n        this.profileUpdateForm.setValue({\n          uid,\n          admin: admin || false,\n          email,\n          nickName,\n          name,\n          surname,\n          stick,\n          role\n        });\n      } else {\n        console.log('No such document!');\n      }\n    }).catch(err => {\n      console.log('Error getting document', err);\n    });\n  }\n  openSnackBar(message) {\n    this.snackBar.open(message, 'ok', {\n      duration: 10000\n    });\n  }\n  logout() {\n    this.firebaseAuth.auth.signOut().then(() => {\n      this.openSnackBar('Давай до свидания');\n      this.router.navigate(['']);\n    });\n  }\n  backToHome() {\n    this.router.navigateByUrl('/home');\n  }\n  // Метод для апдейта базы\n  nowAllowed() {\n    this.snackBar.open('Для изменения этих данных обратись к создателю', 'ок', {\n      duration: 10000\n    });\n  }\n  saveProphile() {\n    if (this.profileUpdateForm.status === 'VALID') {\n      const newUserData = this.profileUpdateForm.value;\n      this.afs.collection('users').doc(this.email.toLowerCase()).set(newUserData).then(() => {\n        this.snackBar.open('Данные успешно изменены', 'ok', {\n          duration: 10000\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n};\nProfileComponent = __decorate([Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof AngularFirestore !== \"undefined\" && AngularFirestore) === \"function\" ? _a : Object, Router, FormBuilder, typeof (_b = typeof AngularFireAuth !== \"undefined\" && AngularFireAuth) === \"function\" ? _b : Object, MatSnackBar])], ProfileComponent);\nexport { ProfileComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}